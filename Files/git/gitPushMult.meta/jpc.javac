class gitPushMult { //[I-S]LN=0;[I-E]
  private gitPush gitpush; //[I-S]LN=1;[I-E]
  private String base, linkNamePasth, Commit, pasth, toke; //[I-S]LN=2;[I-E]
  private File dir; //[I-S]LN=3;[I-E]
  public void UpVariaPasth(gitPush gitpush, File dir, String base, String linkNamePasth, String Commit, String pasth, String toke) { //[I-S]LN=4;[I-E]
    this.gitpush = gitpush; //[I-S]LN=5;[I-E]
    this.base = base; //[I-S]LN=6;[I-E]
    this.linkNamePasth = linkNamePasth; //[I-S]LN=7;[I-E]
    this.Commit = Commit; //[I-S]LN=8;[I-E]
    this.pasth = pasth; //[I-S]LN=9;[I-E]
    this.toke = toke; //[I-S]LN=10;[I-E]
    this.dir = dir; //[I-S]LN=11;[I-E]
     //[I-S]LN=12;[I-E]
    new AsyncTask( //[I-S]LN=13;[I-E]
        new AsyncRunnable() { //[I-S]LN=14;[I-E]
          public Object onBackground(Object input) { //[I-S]LN=15;[I-E]
            processFile(); //[I-S]LN=16;[I-E]
            return null; //[I-S]LN=17;[I-E]
          } //[I-S]LN=18;[I-E]
 //[I-S]LN=19;[I-E]
          public void onEngine(Object result) { //[I-S]LN=20;[I-E]
            Console.log("upload Ended"); //[I-S]LN=21;[I-E]
            Toast.showText("UpLoad the End",1); //[I-S]LN=22;[I-E]
          } //[I-S]LN=23;[I-E]
        }); //[I-S]LN=24;[I-E]
  } //[I-S]LN=25;[I-E]
 //[I-S]LN=26;[I-E]
  private void busca(File dir, List<File> resul) { //[I-S]LN=27;[I-E]
    File[] file = dir.listFiles(); //[I-S]LN=28;[I-E]
    if (file == null) return; //[I-S]LN=29;[I-E]
    for (File f : file) { //[I-S]LN=30;[I-E]
      if (f.isDirectory()) busca(f, resul); //[I-S]LN=31;[I-E]
      else resul.add(f); //[I-S]LN=32;[I-E]
    } //[I-S]LN=33;[I-E]
  } //[I-S]LN=34;[I-E]
 //[I-S]LN=35;[I-E]
  private File[] listFile(File dir) { //[I-S]LN=36;[I-E]
    List<File> resul = new ArrayList<File>(); //[I-S]LN=37;[I-E]
    busca(dir, resul); //[I-S]LN=38;[I-E]
    return resul.toArray(new File[0]); //[I-S]LN=39;[I-E]
  } //[I-S]LN=40;[I-E]
 //[I-S]LN=41;[I-E]
  private void processFile() { //[I-S]LN=42;[I-E]
    File[] file = listFile(dir); //[I-S]LN=43;[I-E]
    if (file == null) return; //[I-S]LN=44;[I-E]
    for (int i = 0; i < file.length; i++) { //[I-S]LN=45;[I-E]
      File f = file[i]; //[I-S]LN=46;[I-E]
      if (f.isDirectory()) continue; //[I-S]LN=47;[I-E]
      if (!f.getName().startsWith(".")) { //[I-S]LN=48;[I-E]
        String name = f.getAbsolutePath().replace(base, ""); //[I-S]LN=49;[I-E]
        String cominho = f.getAbsolutePath(); //[I-S]LN=50;[I-E]
        String API_Url = "https://api.github.com/repos/" + linkNamePasth + "/contents/Files/" + pasth + name + "?ref=main"; //[I-S]LN=51;[I-E]
 //[I-S]LN=52;[I-E]
        // busca o sha do file //[I-S]LN=53;[I-E]
 //[I-S]LN=54;[I-E]
        String shas = gitpush.getSha(API_Url, toke); //[I-S]LN=55;[I-E]
        gitpush.GitPush(API_Url, Commit, cominho, toke, shas); //[I-S]LN=56;[I-E]
 //[I-S]LN=57;[I-E]
        Console.log(!shas.isEmpty() ? "update" : "create"); //[I-S]LN=58;[I-E]
        Console.log("Link: " + API_Url); //[I-S]LN=59;[I-E]
      } //[I-S]LN=60;[I-E]
    }  //[I-S]LN=61;[I-E]
  } //[I-S]LN=62;[I-E]
} //[I-S]LN=63;[I-E]