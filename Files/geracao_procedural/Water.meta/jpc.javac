class Water extends Component { //[I-S]LN=0;[I-E]
  private ModelRenderer WaterModelo; //[I-S]LN=1;[I-E]
  private Vertex WaterVertex; //[I-S]LN=2;[I-E]
  private List<Vector3> WaterVertices = new LinkedList<Vector3>(), WaterNormal = new LinkedList<Vector3>(); //[I-S]LN=3;[I-E]
  private List<Vector2> WaterUV = new LinkedList<Vector2>(); //[I-S]LN=4;[I-E]
  private int[] WaterTriangle; //[I-S]LN=5;[I-E]
  private chunkgen tama; //[I-S]LN=6;[I-E]
  private malha modela = new malha(); //[I-S]LN=7;[I-E]
 //[I-S]LN=8;[I-E]
  void start() { //[I-S]LN=9;[I-E]
    if (!myObject.exists()) return; //[I-S]LN=10;[I-E]
    tama = WorldController.findObject("player").findComponent("chunkgen"); //[I-S]LN=11;[I-E]
    WaterModelo = myObject.findComponent("modelrenderer"); //[I-S]LN=12;[I-E]
    WaterVertex = new Vertex(); //[I-S]LN=13;[I-E]
    if (myObject.exists()) return; //[I-S]LN=14;[I-E]
    WaterVertices.clear(); //[I-S]LN=15;[I-E]
    WaterNormal.clear(); //[I-S]LN=16;[I-E]
    WaterUV.clear(); //[I-S]LN=17;[I-E]
  } //[I-S]LN=18;[I-E]
 //[I-S]LN=19;[I-E]
  public void WaterGera() { //[I-S]LN=20;[I-E]
    start(); //[I-S]LN=21;[I-E]
    for (int z = 0; z <= 4; z++) { //[I-S]LN=22;[I-E]
      for (int x = 0; x <= 4; x++) { //[I-S]LN=23;[I-E]
        WaterVertices.add(new Vector3(x * 4, tama.waterlevel, z * 4)); //[I-S]LN=24;[I-E]
        WaterNormal.add(new Vector3(0, 1, 0)); //[I-S]LN=25;[I-E]
        WaterUV.add(new Vector2(x, z)); //[I-S]LN=26;[I-E]
      } //[I-S]LN=27;[I-E]
    } //[I-S]LN=28;[I-E]
    WaterTriangle = new int[4 * 4 * 6]; //[I-S]LN=29;[I-E]
    modela.triangulo(4, WaterTriangle); //[I-S]LN=30;[I-E]
    WaterVertex = modela.meshup(false, WaterModelo, tama.WaterMate, WaterTriangle, WaterVertices, WaterNormal, WaterUV); //[I-S]LN=31;[I-E]
    myObject.removeComponent(new Water()); //[I-S]LN=32;[I-E]
  } //[I-S]LN=33;[I-E]
} //[I-S]LN=34;[I-E]