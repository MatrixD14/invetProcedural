class Water extends Component { //[I-S]LN=0;[I-E]
  private ModelRenderer WaterModelo; //[I-S]LN=1;[I-E]
  private Vertex WaterVertex; //[I-S]LN=2;[I-E]
  private Vector2Buffer WaterUV = null; //[I-S]LN=3;[I-E]
  private Vector3Buffer WaterVertices = null, WaterNormal = null; //[I-S]LN=4;[I-E]
  private IntBuffer WaterTriangle = null; //[I-S]LN=5;[I-E]
  private chunkgen tama; //[I-S]LN=6;[I-E]
  private malha modela = new malha(); //[I-S]LN=7;[I-E]
 //[I-S]LN=8;[I-E]
  void start() { //[I-S]LN=9;[I-E]
    if (!myObject.exists()) return; //[I-S]LN=10;[I-E]
    tama = WorldController.findObject("player").findComponent("chunkgen"); //[I-S]LN=11;[I-E]
    WaterModelo = myObject.findComponent("modelrenderer"); //[I-S]LN=12;[I-E]
    WaterVertex = new Vertex(); //[I-S]LN=13;[I-E]
   // if (myObject.exists()) return; //[I-S]LN=14;[I-E]
    // WaterVertices.clear(); //[I-S]LN=15;[I-E]
    // WaterNormal.clear(); //[I-S]LN=16;[I-E]
    //WaterUV.clear(); //[I-S]LN=17;[I-E]
  } //[I-S]LN=18;[I-E]
 //[I-S]LN=19;[I-E]
  public void WaterGera() { //[I-S]LN=20;[I-E]
    start(); //[I-S]LN=21;[I-E]
    createBuffer(); //[I-S]LN=22;[I-E]
    for (int z = 0; z <= 4; z++) { //[I-S]LN=23;[I-E]
      for (int x = 0; x <= 4; x++) { //[I-S]LN=24;[I-E]
        WaterVertices.put(x * 4, tama.waterlevel, z * 4); //[I-S]LN=25;[I-E]
        WaterNormal.put(0, 1, 0); //[I-S]LN=26;[I-E]
        WaterUV.put(new Vector2(x, z)); //[I-S]LN=27;[I-E]
      } //[I-S]LN=28;[I-E]
    } //[I-S]LN=29;[I-E]
    modela.trianguloN(4, WaterTriangle); //[I-S]LN=30;[I-E]
    int[] WaterTriangleConvert = new int[WaterTriangle.position()]; //[I-S]LN=31;[I-E]
    WaterTriangle.rewind(); //[I-S]LN=32;[I-E]
    WaterTriangle.get(WaterTriangleConvert); //[I-S]LN=33;[I-E]
    WaterVertex = modela.meshupN(false, WaterModelo, tama.WaterMate, WaterTriangleConvert, WaterVertices, WaterNormal, WaterUV); //[I-S]LN=34;[I-E]
    myObject.removeComponent(new Water()); //[I-S]LN=35;[I-E]
  } //[I-S]LN=36;[I-E]
 //[I-S]LN=37;[I-E]
  public void createBuffer() { //[I-S]LN=38;[I-E]
    chunkSimul data = new chunkSimul(); //[I-S]LN=39;[I-E]
    data.generatWater(4, modela); //[I-S]LN=40;[I-E]
    WaterVertices = BufferUtils.createVector3Buffer(data.VertecesWaterCount); //[I-S]LN=41;[I-E]
    WaterNormal = BufferUtils.createVector3Buffer(data.NormalWaterCount); //[I-S]LN=42;[I-E]
    WaterTriangle = BufferUtils.createIntBuffer(data.TrianWaterCount); //[I-S]LN=43;[I-E]
    WaterUV = BufferUtils.createVector2Buffer(data.UvMapWaterCount); //[I-S]LN=44;[I-E]
    WaterVertices.setVboEnabled(true); //[I-S]LN=45;[I-E]
    WaterNormal.setVboEnabled(true); //[I-S]LN=46;[I-E]
    WaterUV.setVboEnabled(true); //[I-S]LN=47;[I-E]
  }  //[I-S]LN=48;[I-E]
} //[I-S]LN=49;[I-E]