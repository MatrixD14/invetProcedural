class item extends Component { //[I-S]LN=0;[I-E]
  public final Map<String, Texture> SpriteCach = new HashMap<String, Texture>(); //[I-S]LN=1;[I-E]
  public String name, typeDC; //[I-S]LN=2;[I-E]
  public Texture ui; //[I-S]LN=3;[I-E]
  private Texture Spait; //[I-S]LN=4;[I-E]
  public VertexFile vertex; //[I-S]LN=5;[I-E]
  public int value, QuatItemGrup, maxgrup, id; //[I-S]LN=6;[I-E]
  public int MapSpriteX, MapSpriteY; //[I-S]LN=7;[I-E]
  private int altura = 32, largura = 32; //[I-S]LN=8;[I-E]
  public atributo logica; //[I-S]LN=9;[I-E]
  public item() { //[I-S]LN=10;[I-E]
    super(); //[I-S]LN=11;[I-E]
  } //[I-S]LN=12;[I-E]
 //[I-S]LN=13;[I-E]
  public item(String name, int id, String typeDC, Texture ui, VertexFile vertex, int value, int QuatItemGrup, int maxgrup, int MapSpriteX, int MapSpriteY, atributo logica) { //[I-S]LN=14;[I-E]
    super(); //[I-S]LN=15;[I-E]
    this.name = name; //[I-S]LN=16;[I-E]
    this.id = id; //[I-S]LN=17;[I-E]
    this.typeDC = typeDC; //[I-S]LN=18;[I-E]
    this.ui = ui; //[I-S]LN=19;[I-E]
    this.vertex = vertex; //[I-S]LN=20;[I-E]
    this.value = value; //[I-S]LN=21;[I-E]
    this.QuatItemGrup = QuatItemGrup; //[I-S]LN=22;[I-E]
    this.maxgrup = maxgrup; //[I-S]LN=23;[I-E]
    this.MapSpriteX = MapSpriteX; //[I-S]LN=24;[I-E]
    this.MapSpriteY = MapSpriteY; //[I-S]LN=25;[I-E]
    //this.Spait = getSpait(); //[I-S]LN=26;[I-E]
    this.logica = logica; //[I-S]LN=27;[I-E]
  } //[I-S]LN=28;[I-E]
 //[I-S]LN=29;[I-E]
  public Texture getSpait() { //[I-S]LN=30;[I-E]
    if (ui == null) return null; //[I-S]LN=31;[I-E]
    if (Spait == null) Spait = Atlas(); //[I-S]LN=32;[I-E]
    return Spait; //[I-S]LN=33;[I-E]
  } //[I-S]LN=34;[I-E]
 //[I-S]LN=35;[I-E]
  public void Usando() { //[I-S]LN=36;[I-E]
    if (logica != null) logica.Used(this); //[I-S]LN=37;[I-E]
  } //[I-S]LN=38;[I-E]
 //[I-S]LN=39;[I-E]
  public void NoUsando() { //[I-S]LN=40;[I-E]
    if (logica != null) logica.NoUsed(this); //[I-S]LN=41;[I-E]
  } //[I-S]LN=42;[I-E]
   //[I-S]LN=43;[I-E]
  public Texture Atlas() {    //[I-S]LN=44;[I-E]
    if (ui == null) return null; //[I-S]LN=45;[I-E]
    String key = name + "_" + MapSpriteX + "_" + MapSpriteY; //[I-S]LN=46;[I-E]
    Texture cach = SpriteCach.get(key); //[I-S]LN=47;[I-E]
    if (cach != null) return cach; //[I-S]LN=48;[I-E]
 //[I-S]LN=49;[I-E]
    Texture mapSprite = new Texture(largura, altura, true); //[I-S]LN=50;[I-E]
    int spaitx = largura * MapSpriteX; //[I-S]LN=51;[I-E]
    int spaity = altura * MapSpriteY; //[I-S]LN=52;[I-E]
 //[I-S]LN=53;[I-E]
    for (int x = 0; x < largura; x++) { //[I-S]LN=54;[I-E]
      int uiX = x + spaitx; //[I-S]LN=55;[I-E]
      for (int y = 0; y < altura; y++) { //[I-S]LN=56;[I-E]
        int uiY = y + spaity; //[I-S]LN=57;[I-E]
        Color corMap = ui.get(uiX, uiY); //[I-S]LN=58;[I-E]
        mapSprite.setPixel(x, y, corMap); //[I-S]LN=59;[I-E]
      } //[I-S]LN=60;[I-E]
    } //[I-S]LN=61;[I-E]
    mapSprite.apply(); //[I-S]LN=62;[I-E]
    SpriteCach.put(key, mapSprite); //[I-S]LN=63;[I-E]
    return mapSprite; //[I-S]LN=64;[I-E]
  } //[I-S]LN=65;[I-E]
} //[I-S]LN=66;[I-E]