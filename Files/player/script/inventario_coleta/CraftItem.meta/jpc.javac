class CraftItem extends Component { //[I-S]LN=0;[I-E]
  public Texture Sprite; //[I-S]LN=1;[I-E]
  public ArrayList<Receita> receita = new ArrayList<Receita>(); //[I-S]LN=2;[I-E]
  public VertexFile[] obj = new VertexFile[1]; //[I-S]LN=3;[I-E]
  private invertore invent; //[I-S]LN=4;[I-E]
  private Color White, Transparent; //[I-S]LN=5;[I-E]
 //[I-S]LN=6;[I-E]
  void start() { //[I-S]LN=7;[I-E]
    White = new Color(); //[I-S]LN=8;[I-E]
    Transparent = new Color(0, 0, 0, 0); //[I-S]LN=9;[I-E]
    invent = myObject.findComponent("invertore"); //[I-S]LN=10;[I-E]
    ArrayList<item> Items = //[I-S]LN=11;[I-E]
        new ArrayList<item>() { //[I-S]LN=12;[I-E]
          { //[I-S]LN=13;[I-E]
            add(new item("picareta", 9, "Minera", Sprite, obj[0], 5, 1, 1, 0, 0, null)); //[I-S]LN=14;[I-E]
            add(new item("espada", 10, "Dano", Sprite, obj[0], 10, 1, 1, 1, 0, new arma(new espada()))); //[I-S]LN=15;[I-E]
            add(new item("machado", 11, "Dano", Sprite, obj[0], 15, 1, 1, 2, 0, null)); //[I-S]LN=16;[I-E]
            add(new item("tocha", 8, "Luz", Sprite, obj[0], 10, 1, 64, 0, 1, new tocha())); //[I-S]LN=17;[I-E]
            add(new item("pão", 12, "Fome", Sprite, obj[1], 20, 1, 64, 1, 1, null)); //[I-S]LN=18;[I-E]
            add(new item("tabua", 6, "Contrução", Sprite, obj[0], 20, 1, 64, 3, 2, null)); //[I-S]LN=19;[I-E]
            add(new item("galho", 2, "Dano", Sprite, obj[0], 20, 1, 64, 0, 2, new arma(new espada()))); //[I-S]LN=20;[I-E]
            add(new item("craftTable", 7, "CraftItem", Sprite, obj[1], 9, 1, 64, 3, 3, null)); //[I-S]LN=21;[I-E]
            add(new item("fornalha", 13, "assar", Sprite, obj[1], 64, 1, 64, 3, 1, null)); //[I-S]LN=22;[I-E]
            add(new item("baú", 14, "armazena", Sprite, obj[1], 64, 1, 64, 2, 3, null)); //[I-S]LN=23;[I-E]
          } //[I-S]LN=24;[I-E]
        }; //[I-S]LN=25;[I-E]
    receita.add(new Receita(new int[] {3, 3, 3, 0, 2, 0, 0, 2, 0}, Items.get(0))); //[I-S]LN=26;[I-E]
    receita.add(new Receita(new int[] {0, 3, 0, 0, 3, 0, 0, 2, 0}, Items.get(1))); //[I-S]LN=27;[I-E]
    receita.add(new Receita(new int[] {3, 2, 0, 3, 2, 0, 0, 2, 0}, Items.get(2))); //[I-S]LN=28;[I-E]
    receita.add(new Receita(new int[] {0, 4, 0, 0, 2, 0, 0, 0, 0}, Items.get(3))); //[I-S]LN=29;[I-E]
    receita.add(new Receita(new int[] {0, 0, 0, 5, 5, 5, 0, 0, 0}, Items.get(4))); //[I-S]LN=30;[I-E]
    receita.add(new Receita(new int[] {0, 0, 0, 0, 1, 0, 0, 0, 0}, Items.get(5))); //[I-S]LN=31;[I-E]
    receita.add(new Receita(new int[] {0, 0, 0, 0, 6, 0, 0, 0, 0}, Items.get(6))); //[I-S]LN=32;[I-E]
    receita.add(new Receita(new int[] {0, 6, 6, 0, 6, 6, 0, 0, 0}, Items.get(7))); //[I-S]LN=33;[I-E]
    receita.add(new Receita(new int[] {3, 3, 3, 3, 0, 3, 3, 3, 3}, Items.get(8))); //[I-S]LN=34;[I-E]
    receita.add(new Receita(new int[] {6, 6, 6, 6, 0, 6, 6, 6, 6}, Items.get(9))); //[I-S]LN=35;[I-E]
  } //[I-S]LN=36;[I-E]
 //[I-S]LN=37;[I-E]
  void repeat() { //[I-S]LN=38;[I-E]
    checkItem(); //[I-S]LN=39;[I-E]
    if (Input.isKeyDown("output") && invent.items.get(29) != null) craftItem(); //[I-S]LN=40;[I-E]
  } //[I-S]LN=41;[I-E]
 //[I-S]LN=42;[I-E]
  public void checkItem() { //[I-S]LN=43;[I-E]
    List<item> CheckItem = invent.items.subList(20, 29); //[I-S]LN=44;[I-E]
    boolean checoReciete = false; //[I-S]LN=45;[I-E]
    for (Receita r : receita) { //[I-S]LN=46;[I-E]
      if (r.material(CheckItem)) { //[I-S]LN=47;[I-E]
        item checkOneObj = r.getGeraItem(); //[I-S]LN=48;[I-E]
        checoReciete = true; //[I-S]LN=49;[I-E]
        if (invent.items.get(29) == null || invent.items.get(29).id != checkOneObj.id) { //[I-S]LN=50;[I-E]
          invent.items.set(29, checkOneObj); //[I-S]LN=51;[I-E]
          invent.spait[29].setImage(checkOneObj.getSpait()); //[I-S]LN=52;[I-E]
          invent.spait[29].setColor(White); //[I-S]LN=53;[I-E]
        } //[I-S]LN=54;[I-E]
        invent.cont[29].setText("1"); //[I-S]LN=55;[I-E]
        break; //[I-S]LN=56;[I-E]
      } //[I-S]LN=57;[I-E]
    } //[I-S]LN=58;[I-E]
    if (!checoReciete) offItem(29, false); //[I-S]LN=59;[I-E]
  } //[I-S]LN=60;[I-E]
 //[I-S]LN=61;[I-E]
  public void craftItem() { //[I-S]LN=62;[I-E]
    List<item> CheckItem = invent.items.subList(20, 29); //[I-S]LN=63;[I-E]
    if (invent.items.get(29) == null) return; //[I-S]LN=64;[I-E]
    for (Receita r : receita) { //[I-S]LN=65;[I-E]
      if (r.material(CheckItem)) { //[I-S]LN=66;[I-E]
        item checkOneObj = r.getGeraItem(); //[I-S]LN=67;[I-E]
        if (!AddItemSlot(checkOneObj)) return; //[I-S]LN=68;[I-E]
        boolean[] uso = new boolean[9]; //[I-S]LN=69;[I-E]
 //[I-S]LN=70;[I-E]
        for (int items = 20; items < 29; items++) { //[I-S]LN=71;[I-E]
          int SeeOneObj = r.getItems()[items - 20]; //[I-S]LN=72;[I-E]
          int idItem = CheckItem.get(items - 20) != null ? CheckItem.get(items - 20).id : 0; //[I-S]LN=73;[I-E]
          if (SeeOneObj == 0 || uso[items - 20] || idItem != SeeOneObj) continue; //[I-S]LN=74;[I-E]
 //[I-S]LN=75;[I-E]
          invent.slotAlmout[items]--; //[I-S]LN=76;[I-E]
          if (invent.slotAlmout[items] <= 0) offItem(items, true); //[I-S]LN=77;[I-E]
          else invent.cont[items].setText("" + invent.slotAlmout[items]); //[I-S]LN=78;[I-E]
          uso[items - 20] = true; //[I-S]LN=79;[I-E]
        }  //[I-S]LN=80;[I-E]
        return; //[I-S]LN=81;[I-E]
      } //[I-S]LN=82;[I-E]
    } //[I-S]LN=83;[I-E]
  } //[I-S]LN=84;[I-E]
 //[I-S]LN=85;[I-E]
  public boolean AddItemSlot(item newItem) { //[I-S]LN=86;[I-E]
    int Void = -1; //[I-S]LN=87;[I-E]
    for (int i = 0; i < 20; i++) { //[I-S]LN=88;[I-E]
      item atual = invent.items.get(i); //[I-S]LN=89;[I-E]
      if (atual != null) { //[I-S]LN=90;[I-E]
        if (invent.items.get(i).id == newItem.id && atual.maxgrup > invent.slotAlmout[i]) { //[I-S]LN=91;[I-E]
          invent.cont[i].setText("" + (++invent.slotAlmout[i])); //[I-S]LN=92;[I-E]
          return true; //[I-S]LN=93;[I-E]
        } //[I-S]LN=94;[I-E]
      } else if (Void == -1) Void = i; //[I-S]LN=95;[I-E]
    } //[I-S]LN=96;[I-E]
    if (Void != -1) { //[I-S]LN=97;[I-E]
      invent.items.set(Void, newItem); //[I-S]LN=98;[I-E]
      invent.slotAlmout[Void] = 1; //[I-S]LN=99;[I-E]
      invent.spait[Void].setImage(newItem.getSpait()); //[I-S]LN=100;[I-E]
      invent.spait[Void].setColor(White); //[I-S]LN=101;[I-E]
      invent.cont[Void].setText("1"); //[I-S]LN=102;[I-E]
      return true; //[I-S]LN=103;[I-E]
    } //[I-S]LN=104;[I-E]
    return false; //[I-S]LN=105;[I-E]
  } //[I-S]LN=106;[I-E]
 //[I-S]LN=107;[I-E]
  private void offItem(int i, boolean off) { //[I-S]LN=108;[I-E]
    invent.items.set(i, null); //[I-S]LN=109;[I-E]
    invent.spait[i].setImage(Texture.empty()); //[I-S]LN=110;[I-E]
    invent.spait[i].setColor(Transparent); //[I-S]LN=111;[I-E]
    if (off) invent.slotAlmout[i] = 0; //[I-S]LN=112;[I-E]
    invent.cont[i].setText(""); //[I-S]LN=113;[I-E]
  } //[I-S]LN=114;[I-E]
 //[I-S]LN=115;[I-E]
  public class Receita { //[I-S]LN=116;[I-E]
    private int[] items = new int[9]; //[I-S]LN=117;[I-E]
    private item GeraItem; //[I-S]LN=118;[I-E]
 //[I-S]LN=119;[I-E]
    public Receita() { //[I-S]LN=120;[I-E]
      super(); //[I-S]LN=121;[I-E]
    } //[I-S]LN=122;[I-E]
 //[I-S]LN=123;[I-E]
    public Receita(int[] items, item GeraItem) { //[I-S]LN=124;[I-E]
      super(); //[I-S]LN=125;[I-E]
      this.items = items; //[I-S]LN=126;[I-E]
      this.GeraItem = GeraItem; //[I-S]LN=127;[I-E]
    } //[I-S]LN=128;[I-E]
 //[I-S]LN=129;[I-E]
    public int[] getItems() { //[I-S]LN=130;[I-E]
      return items; //[I-S]LN=131;[I-E]
    } //[I-S]LN=132;[I-E]
 //[I-S]LN=133;[I-E]
    public item getGeraItem() { //[I-S]LN=134;[I-E]
      return GeraItem; //[I-S]LN=135;[I-E]
    } //[I-S]LN=136;[I-E]
 //[I-S]LN=137;[I-E]
    public boolean material(List<item> inputSlot) { //[I-S]LN=138;[I-E]
      if (inputSlot.size() != 9) return false; //[I-S]LN=139;[I-E]
      for (int i = 0; i < 9; i++) { //[I-S]LN=140;[I-E]
        int requisitos = items[i]; //[I-S]LN=141;[I-E]
        int atual = inputSlot.get(i) != null ? inputSlot.get(i).id : 0; //[I-S]LN=142;[I-E]
        if (requisitos != atual) return false; //[I-S]LN=143;[I-E]
      } //[I-S]LN=144;[I-E]
      return true; //[I-S]LN=145;[I-E]
    } //[I-S]LN=146;[I-E]
  } //[I-S]LN=147;[I-E]
} //[I-S]LN=148;[I-E]