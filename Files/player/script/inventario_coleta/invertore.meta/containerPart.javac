package JAVARuntime;

import java.util.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.zip.*;
import java.text.*;
import java.net.*;
import java.math.*;
import java.io.*;
import java.nio.*;
import java.time.*;
import java.time.chrono.*;
import java.time.format.*;
import java.time.temporal.*;
import java.time.zone.*;



public class _JContainer{}

//C-R:invertore
class invertore extends Component { //[I-S]LN=0;[I-E]
  private List<SpatialObject> Item = new ArrayList<SpatialObject>(); //[I-S]LN=1;[I-E]
  @Hide public List<item> items = new ArrayList<item>(); //[I-S]LN=2;[I-E]
  @Hide public SUIImage[] spait = new SUIImage[30]; //[I-S]LN=3;[I-E]
  @Hide public SUIText[] cont = new SUIText[30]; //[I-S]LN=4;[I-E]
  @Hide public int[] slotAlmout; //[I-S]LN=5;[I-E]
  private SpatialObject button; //[I-S]LN=6;[I-E]
  private boolean onoff = false; //[I-S]LN=7;[I-E]
  private float time = 0; //[I-S]LN=8;[I-E]
public   void start() { //[I-S]LN=9;[I-E]
    button = WorldController.findObject("colete"); //[I-S]LN=10;[I-E]
    slotAlmout = new int[cont.length]; //[I-S]LN=11;[I-E]
    slot(); //[I-S]LN=12;[I-E]
    for (int i = 0; i < cont.length; i++) { //[I-S]LN=13;[I-E]
      items.add(i, null); //[I-S]LN=14;[I-E]
      if (cont[i] != null) cont[i].setText(""); //[I-S]LN=15;[I-E]
      if (spait[i] != null) { //[I-S]LN=16;[I-E]
        spait[i].setColor(new Color(0, 0, 0, 0)); //[I-S]LN=17;[I-E]
        spait[i].setImage(null); //[I-S]LN=18;[I-E]
      } //[I-S]LN=19;[I-E]
    } //[I-S]LN=20;[I-E]
  } //[I-S]LN=21;[I-E]
 //[I-S]LN=22;[I-E]
public   void repeat() { //[I-S]LN=23;[I-E]
    if (time < 1) time += 0.01f; //[I-S]LN=24;[I-E]
    laser(); //[I-S]LN=25;[I-E]
    button.setEnabled(onoff); //[I-S]LN=26;[I-E]
  } //[I-S]LN=27;[I-E]
 //[I-S]LN=28;[I-E]
  private void slot() { //[I-S]LN=29;[I-E]
    for (int i = 0; i < 30; i++) { //[I-S]LN=30;[I-E]
      String obj = i < 5 ? "slotH" + (i + 1) : i < 20 ? "slot" + (i - 4) : i < 29 ? "slotCria" + (i - 19) : "output"; //[I-S]LN=31;[I-E]
      String child = i < 5 ? "spait" + (i + 1) : i < 20 ? "item" + (i - 4) : i < 29 ? "item" + (i - 19) : "outputCria"; //[I-S]LN=32;[I-E]
      Item.add(i, WorldController.findObject(obj).findChildObject(child)); //[I-S]LN=33;[I-E]
      cont[i] = Item.get(i).findComponent("suitext"); //[I-S]LN=34;[I-E]
      spait[i] = Item.get(i).findComponent("suiimage"); //[I-S]LN=35;[I-E]
    } //[I-S]LN=36;[I-E]
  } //[I-S]LN=37;[I-E]
 //[I-S]LN=38;[I-E]
  private void laser() { //[I-S]LN=39;[I-E]
    SpatialObject camera = WorldController.findObject("see_player"); //[I-S]LN=40;[I-E]
    String text; //[I-S]LN=41;[I-E]
LaserHit hit = new Laser().trace(camera.getGlobalPosition(), camera.forward(), 6f); //[I-S]LN=42;[I-E]
if (hit == null || !"object".equals(hit.getObject().getTag())) { //[I-S]LN=43;[I-E]
      onoff = false;       //[I-S]LN=44;[I-E]
      return; //[I-S]LN=45;[I-E]
    } //[I-S]LN=46;[I-E]
     //[I-S]LN=47;[I-E]
    item objecthit = hit.getObject().findComponent("item"); //[I-S]LN=48;[I-E]
    text = objecthit.QuatItemGrup + objecthit.name + ", " + objecthit.typeDC + ": " + objecthit.value; //[I-S]LN=49;[I-E]
    GUI.drawText(text,(Screen.width()/2)-200,(Screen.height()/2)+160,30,12,8); //[I-S]LN=50;[I-E]
    onoff = true; //[I-S]LN=51;[I-E]
    if ((!Input.isKeyPressed("coleta") && !Input.keyboard.isKeyDown("e")) || time < 0.45f) return; //[I-S]LN=52;[I-E]
    for (int i = 0; i < (items.size() - 7); i++) { //[I-S]LN=53;[I-E]
      if (items.get(i) == null || (items.get(i) != null && items.get(i).id == objecthit.id)) { //[I-S]LN=54;[I-E]
        int spaceVoid = objecthit.maxgrup - slotAlmout[i]; //[I-S]LN=55;[I-E]
        if (spaceVoid >= objecthit.QuatItemGrup) { //[I-S]LN=56;[I-E]
          addItem(objecthit, i); //[I-S]LN=57;[I-E]
          hit.getObject().destroy(); //[I-S]LN=58;[I-E]
          onoff = false; //[I-S]LN=59;[I-E]
          time = 0; //[I-S]LN=60;[I-E]
          break; //[I-S]LN=61;[I-E]
        } //[I-S]LN=62;[I-E]
      } //[I-S]LN=63;[I-E]
    } //[I-S]LN=64;[I-E]
  } //[I-S]LN=65;[I-E]
 //[I-S]LN=66;[I-E]
  public void addItem(item additem, int i) { //[I-S]LN=67;[I-E]
    slotAlmout[i] += additem.QuatItemGrup; //[I-S]LN=68;[I-E]
    int valuesoma = slotAlmout[i]; //[I-S]LN=69;[I-E]
    items.set(i, additem); //[I-S]LN=70;[I-E]
    if (cont[i] == null) return; //[I-S]LN=71;[I-E]
    cont[i].setText(valuesoma > 0 ? String.valueOf(valuesoma) : "1"); //[I-S]LN=72;[I-E]
    if (i >= spait.length) return; //[I-S]LN=73;[I-E]
    spait[i].setImage(additem.getSpait()); //[I-S]LN=74;[I-E]
    spait[i].setColor(new Color()); //[I-S]LN=75;[I-E]
  } //[I-S]LN=76;[I-E]
} //[I-S]LN=77;[I-E]